create table game
(
    current_player_user_profile_id bigint not null,
    current_turn_turn_id           bigint,
    game_id                        bigint generated by default as identity,
    winner_user_profile_id         bigint,
    state                          enum ('FINISHED','IN_PLAY','PRE_GAME') not null,
    primary key (game_id)
);
create table roll
(
    farkle     boolean,
    roll_score integer,
    rollid     bigint generated by default as identity,
    primary key (rollid)
);
create table score_master
(
    bank_score integer,
    score_id   bigint generated by default as identity,
    primary key (score_id)
);
create table turn
(
    finished   boolean not null,
    turn_score integer not null,
    game_id    bigint  not null,
    turn_id    bigint generated by default as identity,
    primary key (turn_id)
);
create table user_profile
(
    user_profile_id bigint generated by default as identity,
    external_key    uuid not null unique,
    auth_key        varchar(255),
    display_name    varchar(255),
    primary key (user_profile_id)
);
alter table if exists game add constraint FK65l7adprmfq4ll4q371i1admw foreign key (current_player_user_profile_id) references user_profile;
alter table if exists game add constraint FKa91aompdbsmkdlqltkmq68ga0 foreign key (current_turn_turn_id) references turn;
alter table if exists game add constraint FKp7oy6bephetwdo1a8uwwkmoc foreign key (winner_user_profile_id) references user_profile;
alter table if exists turn add constraint FKfnda1g6jd92jpiakpu2689pgf foreign key (game_id) references game;
